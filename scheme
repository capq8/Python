(define (addup L) (cond
 ((null? L) 0)
 (else (+ (car L) (addup (cdr L))) ) )
)

(define (deepSum L) (cond
                      ((null? L) 0)
                      ((null? (car L))(+ 0 (deepSum (cdr L))))
                      ((pair? (car L)) (+ (addup (car L)) (deepSum (cdr L))))
                      (not (list? (car L))(+ (car L) (deepSum (cdr L))))
                      (else (+ (car L) (deepSum (cdr L))) )
                      ))



(deepSum '(1 (2 3 4) (5) 6 7 (8 9 10) 11))
